{"version":3,"file":"static/webpack/static/development/pages/login.js.d37a21f2d23ef3690fca.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {FormControl, FormGroup, ControlLabel, HelpBlock, Button, Modal} from 'react-bootstrap'\nimport {Router} from '../router'\nimport Auth from '../services/auth'\nimport {forgetPassword} from '../services/api'\nvar auth\n\nconst FieldGroup = ({ id, label, help, ...props }) => {\n  return (\n    <FormGroup controlId={id}>\n      <ControlLabel>{label}</ControlLabel>\n      <FormControl {...props} />\n      {help && <HelpBlock>{help}</HelpBlock>}\n    </FormGroup>\n  );\n}\n\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    errorHelper: {color: '', mess: ''},\n    loginMessage: ''\n  }\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount(){\n    auth = new Auth()\n  }\n\n  loginSubmit(e) {\n    console.log(auth)\n    e.preventDefault()\n    let submit = e.target.querySelector('[type=submit]')\n    submit.disabled = true\n    let data = {...this.state}\n    data.deviceAPNSToken = 'deviceAPNSToken'\n    data.deviceFcmToken = 'deviceFcmToken'\n    auth.login(this.state)\n    .then(res => {\n      if(res.success){\n        browserHistory.pushRoute('/dashboard')\n      }\n    })\n    .catch(err => {\n      submit.disabled = false\n      this.setState({loginMessage: \"You have entered an invalid username or password!\"})\n    })\n  }\n\n  fieldChange(value) {\n    if(value) {\n      this.setState(value);\n      this.setState({loginMessage: ''})\n    }\n  }\n\n  passwordForgotten(e){\n    e.preventDefault()\n    let submit = e.target.querySelector('[type=submit]')\n    submit.disabled = true\n    let {emailAccount, errorHelper} = this.state\n    forgetPassword({'email':emailAccount})\n    .then(res => {\n      if(res.success){\n        errorHelper.color = 'red'\n        errorHelper.mess = res.results.message\n      }else{\n        submit.disabled = false\n        errorHelper.color = 'green'\n        errorHelper.mess = res.results.message\n      }\n      this.setState({errorHelper})\n    })\n  }\n\n  render() {\n    const {email,password, showPassForgot, errorHelper, loginMessage} = this.state\n    return(\n      <div className=\"main-view\">\n        <div className=\"flex-center\">\n          <form className=\"login-form\" onSubmit={e => this.loginSubmit(e)}>\n            <div className=\"flex-center\">\n              <div className=\"app-logo original text inline-block\"></div>\n            </div>\n            <h2 className=\"text center\">Login</h2>\n            <FieldGroup\n              type=\"email\"\n              label=\"Email\"\n              value={email}\n              required=\"required\"\n              placeholder=\"Email\"\n              onChange={e=> this.fieldChange({email:e.target.value})}\n            />\n            <FieldGroup\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              required=\"required\"\n              placeholder=\"Password\"\n              onChange={e=> this.fieldChange({password:e.target.value})}\n            />\n            <div style={{cursor: 'pointer', marginBottom: 15}}>\n              <a onClick={_ => {\n                this.setState({showPassForgot: true})\n              }}>Forgot Password?</a>\n            </div>\n\n            <Modal show={showPassForgot} onHide={_ => this.setState({showPassForgot: false, errorHelper:''})}>\n              <form onSubmit={e => this.passwordForgotten(e)}>\n                <Modal.Header>\n                  <Modal.Title>\n                  Forgot Password\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FieldGroup\n                      label=\"Email Account\"\n                      required='required'\n                      type='email'\n                      placeholder=\"Please enter your email account\"\n                      onChange={e=> {\n                        this.setState({emailAccount: e.target.value})\n                      }}\n                    />\n                    {!!errorHelper && <div style={{color: errorHelper.color}}>{errorHelper.mess}</div>}\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button className=\"btn\"\n                    onClick={_ => {this.setState({showPassForgot: false})}}\n                  >Cancel</Button>\n                  <Button className=\"btn btn-primary\"\n                          type=\"submit\"\n                  >Submit</Button>\n                </Modal.Footer>\n              </form>\n            </Modal>\n\n            <Button bsStyle=\"success\" type=\"submit\">Login</Button>\n            <div style={{color: 'red', marginTop: 10, textAlign: 'center'}}>{loginMessage}</div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Login)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;;;;;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AALA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAKA;AAEA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjIA;AACA;AAmIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}